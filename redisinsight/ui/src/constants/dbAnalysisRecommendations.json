{
  "luaScript": {
    "id": "luaScript",
    "title":"Avoid dynamic Lua script",
    "content": [
      {
        "id": "1",
        "type": "span",
        "value": "Refrain from generating dynamic scripts, which can cause your Lua cache to grow and get out of control. Memory is consumed as scripts are loaded. If you have to use dynamic Lua scripts, then remember to track your Lua memory consumption and flush the cache periodically with a SCRIPT FLUSH, also do not hardcode and/or programmatically generate key names in your Lua scripts because it makes them useless in a clustered Redis setup. "
      },
      {
        "id": "2",
        "type": "link",
        "value": {
          "href": "https://docs.redis.com/latest/ri/memory-optimizations/",
          "name": "Read more"
        }
      }
    ],
    "badges": ["code_changes"]
  },
  "useSmallerKeys": {
    "id": "useSmallerKeys",
    "title":"Use smaller keys",
    "content": [
      {
        "id": "1",
        "type": "span",
        "value": "Shorten key names to optimize memory usage. Though, in general, descriptive key names are always preferred, these large key names can eat a lot of the memory. "
      },
      {
        "id": "2",
        "type": "link",
        "value": {
          "href": "https://docs.redis.com/latest/ri/memory-optimizations/",
          "name": "Read more"
        }
      }
    ],
    "badges": ["code_changes"]
  },
  "bigHashes": {
    "id": "bigHashes",
    "title": "Shard big hashes to small hashes",
    "content": [
      {
        "id": "1",
        "type": "span",
        "value": "If you have a hash with a large number of key, value pairs, and if each key, value pair is small enough - break it into smaller hashes to save memory. To shard a HASH table, choose a method of partitioning the data. Hashes themselves have keys that can be used for partitioning the keys into different shards. The number of shards is determined by the total number of keys to be stored and the shard size. Using this and the hash value you can determine the shard ID in which the key resides. Though converting big hashes to small hashes will increase the complexity of your code. "
      },
      {
        "id": "2",
        "type": "link",
        "value": {
          "href": "https://docs.redis.com/latest/ri/memory-optimizations/",
          "name": "Read more"
        }
      }
    ],
    "badges": ["code_changes", "configuration_changes"]
  }
}
